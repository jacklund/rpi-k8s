---
apiVersion: v1
kind: Namespace
metadata:
  name: external-mdns
  labels:
    app.kubernetes.io/name: external-mdns
    app.kubernetes.io/instance: external-mdns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-mdns
  namespace: external-mdns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-mdns
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-mdns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-mdns
subjects:
  - kind: ServiceAccount
    name: external-mdns
    namespace: external-mdns

# NOTE: This needs to be a daemonset because if we run it as a single-node
# deployment, the node it's running on can't resolve the hosts, so we need
# at least two sending out so that all the K8s nodes can resolve
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: external-mdns
  namespace: external-mdns
spec:
  selector:
    matchLabels:
      app: external-mdns
  template:
    metadata:
      labels:
        app: external-mdns
    spec:
      hostNetwork: true
      serviceAccountName: external-mdns
      containers:
        - name: external-mdns
          image: blakec/external-mdns:latest
          args:
            - -source=ingress
            - -source=service
